# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: evm/token_block_message.proto
# Protobuf Python Version: 5.29.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    3,
    '',
    'evm/token_block_message.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from evm import block_message_pb2 as evm_dot_block__message__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1d\x65vm/token_block_message.proto\x12\x0c\x65vm_messages\x1a\x17\x65vm/block_message.proto\"\xc3\x01\n\tTokenInfo\x12\x15\n\rSmartContract\x18\x01 \x01(\x0c\x12\x11\n\tDelegated\x18\x02 \x01(\x08\x12\x13\n\x0b\x44\x65legatedTo\x18\x03 \x01(\x0c\x12\x14\n\x0cProtocolName\x18\x04 \x01(\t\x12\x0c\n\x04Name\x18\x05 \x01(\t\x12\x0e\n\x06Symbol\x18\x06 \x01(\t\x12\x10\n\x08\x44\x65\x63imals\x18\x07 \x01(\x05\x12\x0e\n\x06HasURI\x18\x08 \x01(\x08\x12\x10\n\x08\x46ungible\x18\t \x01(\x08\x12\x0f\n\x07\x41ssetId\x18\n \x01(\t\"\xe5\x02\n\rTokenTransfer\x12\x18\n\x10TransactionIndex\x18\x01 \x01(\x04\x12\x11\n\tCallIndex\x18\x02 \x01(\x04\x12\x10\n\x08LogIndex\x18\x03 \x01(\x04\x12\x0e\n\x06Sender\x18\x04 \x01(\x0c\x12\x10\n\x08Receiver\x18\x05 \x01(\x0c\x12\x0e\n\x06\x41mount\x18\x06 \x01(\x0c\x12\n\n\x02Id\x18\x07 \x01(\x0c\x12\x0b\n\x03URI\x18\x08 \x01(\t\x12)\n\x08\x43urrency\x18\t \x01(\x0b\x32\x17.evm_messages.TokenInfo\x12\x0f\n\x07Success\x18\n \x01(\x08\x12\x0c\n\x04\x44\x61ta\x18\x0c \x01(\x0c\x12\r\n\x05Index\x18\r \x01(\r\x12:\n\x11TransactionHeader\x18\x0e \x01(\x0b\x32\x1f.evm_messages.TransactionHeader\x12\x35\n\x14TransactionSignature\x18\x0f \x01(\x0b\x32\x17.evm_messages.Signature\"\xd5\x01\n\x13TransactionBalances\x12\x18\n\x10TransactionIndex\x18\x01 \x01(\x04\x12:\n\x11TransactionHeader\x18\x02 \x01(\x0b\x32\x1f.evm_messages.TransactionHeader\x12\x35\n\x14TransactionSignature\x18\x03 \x01(\x0b\x32\x17.evm_messages.Signature\x12\x31\n\rTokenBalances\x18\x04 \x03(\x0b\x32\x1a.evm_messages.TokenBalance\"\xf3\x01\n\x0cTokenBalance\x12\x0f\n\x07\x41\x64\x64ress\x18\x01 \x01(\x0c\x12)\n\x08\x43urrency\x18\x02 \x01(\x0b\x32\x17.evm_messages.TokenInfo\x12\x17\n\nPreBalance\x18\x03 \x01(\x0cH\x00\x88\x01\x01\x12\x13\n\x0bPostBalance\x18\x04 \x01(\x0c\x12\x1f\n\x17\x42\x61lanceChangeReasonCode\x18\x05 \x01(\x05\x12\x34\n\x0eTokenOwnership\x18\x06 \x01(\x0b\x32\x1c.evm_messages.TokenOwnership\x12\x13\n\x0bTotalSupply\x18\x07 \x01(\x0c\x42\r\n\x0b_PreBalance\"\x91\x02\n\x11TokenBlockMessage\x12\"\n\x05\x43hain\x18\x01 \x01(\x0b\x32\x13.evm_messages.Chain\x12)\n\x06Header\x18\x02 \x01(\x0b\x32\x19.evm_messages.BlockHeader\x12.\n\tTransfers\x18\x05 \x03(\x0b\x32\x1b.evm_messages.TokenTransfer\x12\x30\n\x08L1Header\x18\x06 \x01(\x0b\x32\x19.evm_messages.BlockHeaderH\x00\x88\x01\x01\x12>\n\x13TransactionBalances\x18\x07 \x03(\x0b\x32!.evm_messages.TransactionBalancesB\x0b\n\t_L1Headerb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'evm.token_block_message_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_TOKENINFO']._serialized_start=73
  _globals['_TOKENINFO']._serialized_end=268
  _globals['_TOKENTRANSFER']._serialized_start=271
  _globals['_TOKENTRANSFER']._serialized_end=628
  _globals['_TRANSACTIONBALANCES']._serialized_start=631
  _globals['_TRANSACTIONBALANCES']._serialized_end=844
  _globals['_TOKENBALANCE']._serialized_start=847
  _globals['_TOKENBALANCE']._serialized_end=1090
  _globals['_TOKENBLOCKMESSAGE']._serialized_start=1093
  _globals['_TOKENBLOCKMESSAGE']._serialized_end=1366
# @@protoc_insertion_point(module_scope)
