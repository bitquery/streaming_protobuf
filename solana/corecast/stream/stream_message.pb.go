// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v6.32.0
// source: solana/corecast/stream_message.proto

package solana_corecast

import (
	messages "github.com/bitquery/streaming_protobuf/v2/solana/messages"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     uint32                      `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	Signature []byte                      `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Status    *messages.TransactionStatus `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`
	Header    *messages.TransactionHeader `protobuf:"bytes,4,opt,name=Header,proto3" json:"Header,omitempty"`
}

func (x *TransactionAttributes) Reset() {
	*x = TransactionAttributes{}
	mi := &file_solana_corecast_stream_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionAttributes) ProtoMessage() {}

func (x *TransactionAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_stream_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionAttributes.ProtoReflect.Descriptor instead.
func (*TransactionAttributes) Descriptor() ([]byte, []int) {
	return file_solana_corecast_stream_message_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionAttributes) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TransactionAttributes) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TransactionAttributes) GetStatus() *messages.TransactionStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *TransactionAttributes) GetHeader() *messages.TransactionHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type BlockAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot uint64 `protobuf:"varint,1,opt,name=Slot,proto3" json:"Slot,omitempty"`
}

func (x *BlockAttributes) Reset() {
	*x = BlockAttributes{}
	mi := &file_solana_corecast_stream_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockAttributes) ProtoMessage() {}

func (x *BlockAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_stream_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockAttributes.ProtoReflect.Descriptor instead.
func (*BlockAttributes) Descriptor() ([]byte, []int) {
	return file_solana_corecast_stream_message_proto_rawDescGZIP(), []int{1}
}

func (x *BlockAttributes) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type DexTradeStreamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block       *BlockAttributes        `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	Transaction *TransactionAttributes  `protobuf:"bytes,2,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
	Trade       *messages.DexTradeEvent `protobuf:"bytes,3,opt,name=Trade,proto3" json:"Trade,omitempty"`
}

func (x *DexTradeStreamMessage) Reset() {
	*x = DexTradeStreamMessage{}
	mi := &file_solana_corecast_stream_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DexTradeStreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DexTradeStreamMessage) ProtoMessage() {}

func (x *DexTradeStreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_stream_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DexTradeStreamMessage.ProtoReflect.Descriptor instead.
func (*DexTradeStreamMessage) Descriptor() ([]byte, []int) {
	return file_solana_corecast_stream_message_proto_rawDescGZIP(), []int{2}
}

func (x *DexTradeStreamMessage) GetBlock() *BlockAttributes {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *DexTradeStreamMessage) GetTransaction() *TransactionAttributes {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *DexTradeStreamMessage) GetTrade() *messages.DexTradeEvent {
	if x != nil {
		return x.Trade
	}
	return nil
}

type DexOrderStreamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block       *BlockAttributes        `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	Transaction *TransactionAttributes  `protobuf:"bytes,2,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
	Order       *messages.DexOrderEvent `protobuf:"bytes,3,opt,name=Order,proto3" json:"Order,omitempty"`
}

func (x *DexOrderStreamMessage) Reset() {
	*x = DexOrderStreamMessage{}
	mi := &file_solana_corecast_stream_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DexOrderStreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DexOrderStreamMessage) ProtoMessage() {}

func (x *DexOrderStreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_stream_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DexOrderStreamMessage.ProtoReflect.Descriptor instead.
func (*DexOrderStreamMessage) Descriptor() ([]byte, []int) {
	return file_solana_corecast_stream_message_proto_rawDescGZIP(), []int{3}
}

func (x *DexOrderStreamMessage) GetBlock() *BlockAttributes {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *DexOrderStreamMessage) GetTransaction() *TransactionAttributes {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *DexOrderStreamMessage) GetOrder() *messages.DexOrderEvent {
	if x != nil {
		return x.Order
	}
	return nil
}

type PoolLiquidityChangeStreamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block       *BlockAttributes                   `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	Transaction *TransactionAttributes             `protobuf:"bytes,2,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
	PoolEvent   *messages.PoolLiquidityChangeEvent `protobuf:"bytes,3,opt,name=PoolEvent,proto3" json:"PoolEvent,omitempty"`
}

func (x *PoolLiquidityChangeStreamMessage) Reset() {
	*x = PoolLiquidityChangeStreamMessage{}
	mi := &file_solana_corecast_stream_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolLiquidityChangeStreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolLiquidityChangeStreamMessage) ProtoMessage() {}

func (x *PoolLiquidityChangeStreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_stream_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolLiquidityChangeStreamMessage.ProtoReflect.Descriptor instead.
func (*PoolLiquidityChangeStreamMessage) Descriptor() ([]byte, []int) {
	return file_solana_corecast_stream_message_proto_rawDescGZIP(), []int{4}
}

func (x *PoolLiquidityChangeStreamMessage) GetBlock() *BlockAttributes {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *PoolLiquidityChangeStreamMessage) GetTransaction() *TransactionAttributes {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *PoolLiquidityChangeStreamMessage) GetPoolEvent() *messages.PoolLiquidityChangeEvent {
	if x != nil {
		return x.PoolEvent
	}
	return nil
}

type BalanceUpdateStreamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block         *BlockAttributes                `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	Transaction   *TransactionAttributes          `protobuf:"bytes,2,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
	BalanceUpdate *messages.CurrencyBalanceUpdate `protobuf:"bytes,3,opt,name=BalanceUpdate,proto3" json:"BalanceUpdate,omitempty"`
}

func (x *BalanceUpdateStreamMessage) Reset() {
	*x = BalanceUpdateStreamMessage{}
	mi := &file_solana_corecast_stream_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceUpdateStreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceUpdateStreamMessage) ProtoMessage() {}

func (x *BalanceUpdateStreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_stream_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceUpdateStreamMessage.ProtoReflect.Descriptor instead.
func (*BalanceUpdateStreamMessage) Descriptor() ([]byte, []int) {
	return file_solana_corecast_stream_message_proto_rawDescGZIP(), []int{5}
}

func (x *BalanceUpdateStreamMessage) GetBlock() *BlockAttributes {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *BalanceUpdateStreamMessage) GetTransaction() *TransactionAttributes {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *BalanceUpdateStreamMessage) GetBalanceUpdate() *messages.CurrencyBalanceUpdate {
	if x != nil {
		return x.BalanceUpdate
	}
	return nil
}

type TransferStreamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block       *BlockAttributes       `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	Transaction *TransactionAttributes `protobuf:"bytes,2,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
	Transfer    *messages.Transfer     `protobuf:"bytes,3,opt,name=Transfer,proto3" json:"Transfer,omitempty"`
}

func (x *TransferStreamMessage) Reset() {
	*x = TransferStreamMessage{}
	mi := &file_solana_corecast_stream_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferStreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferStreamMessage) ProtoMessage() {}

func (x *TransferStreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_stream_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferStreamMessage.ProtoReflect.Descriptor instead.
func (*TransferStreamMessage) Descriptor() ([]byte, []int) {
	return file_solana_corecast_stream_message_proto_rawDescGZIP(), []int{6}
}

func (x *TransferStreamMessage) GetBlock() *BlockAttributes {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *TransferStreamMessage) GetTransaction() *TransactionAttributes {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TransferStreamMessage) GetTransfer() *messages.Transfer {
	if x != nil {
		return x.Transfer
	}
	return nil
}

type ParsedTransactionStreamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block       *BlockAttributes               `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	Transaction *messages.ParsedIdlTransaction `protobuf:"bytes,2,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
}

func (x *ParsedTransactionStreamMessage) Reset() {
	*x = ParsedTransactionStreamMessage{}
	mi := &file_solana_corecast_stream_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParsedTransactionStreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsedTransactionStreamMessage) ProtoMessage() {}

func (x *ParsedTransactionStreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_stream_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsedTransactionStreamMessage.ProtoReflect.Descriptor instead.
func (*ParsedTransactionStreamMessage) Descriptor() ([]byte, []int) {
	return file_solana_corecast_stream_message_proto_rawDescGZIP(), []int{7}
}

func (x *ParsedTransactionStreamMessage) GetBlock() *BlockAttributes {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *ParsedTransactionStreamMessage) GetTransaction() *messages.ParsedIdlTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

var File_solana_corecast_stream_message_proto protoreflect.FileDescriptor

var file_solana_corecast_stream_message_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x1a, 0x20, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x73, 0x6f, 0x6c, 0x61, 0x6e,
	0x61, 0x2f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x6c, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1a, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x73, 0x6f,
	0x6c, 0x61, 0x6e, 0x61, 0x2f, 0x64, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x01, 0x0a,
	0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f, 0x6c,
	0x61, 0x6e, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x22, 0x25, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x15, 0x44, 0x65,
	0x78, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x48, 0x0a, 0x0b, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x78, 0x54, 0x72, 0x61, 0x64, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x15,
	0x44, 0x65, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x48, 0x0a,
	0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x78, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xed, 0x01,
	0x0a, 0x20, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x48, 0x0a, 0x0b, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x09, 0x50, 0x6f, 0x6f, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x09, 0x50, 0x6f, 0x6f, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xec, 0x01,
	0x0a, 0x1a, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x05,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6f,
	0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x05, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x48, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x6f, 0x6c, 0x61,
	0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c,
	0x0a, 0x0d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xd0, 0x01, 0x0a,
	0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x48,
	0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x6f, 0x6c,
	0x61, 0x6e, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22,
	0xa1, 0x01, 0x0a, 0x1e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x47, 0x0a, 0x0b, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x49, 0x64, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_solana_corecast_stream_message_proto_rawDescOnce sync.Once
	file_solana_corecast_stream_message_proto_rawDescData = file_solana_corecast_stream_message_proto_rawDesc
)

func file_solana_corecast_stream_message_proto_rawDescGZIP() []byte {
	file_solana_corecast_stream_message_proto_rawDescOnce.Do(func() {
		file_solana_corecast_stream_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_solana_corecast_stream_message_proto_rawDescData)
	})
	return file_solana_corecast_stream_message_proto_rawDescData
}

var file_solana_corecast_stream_message_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_solana_corecast_stream_message_proto_goTypes = []any{
	(*TransactionAttributes)(nil),             // 0: solana_corecast.TransactionAttributes
	(*BlockAttributes)(nil),                   // 1: solana_corecast.BlockAttributes
	(*DexTradeStreamMessage)(nil),             // 2: solana_corecast.DexTradeStreamMessage
	(*DexOrderStreamMessage)(nil),             // 3: solana_corecast.DexOrderStreamMessage
	(*PoolLiquidityChangeStreamMessage)(nil),  // 4: solana_corecast.PoolLiquidityChangeStreamMessage
	(*BalanceUpdateStreamMessage)(nil),        // 5: solana_corecast.BalanceUpdateStreamMessage
	(*TransferStreamMessage)(nil),             // 6: solana_corecast.TransferStreamMessage
	(*ParsedTransactionStreamMessage)(nil),    // 7: solana_corecast.ParsedTransactionStreamMessage
	(*messages.TransactionStatus)(nil),        // 8: solana_messages.TransactionStatus
	(*messages.TransactionHeader)(nil),        // 9: solana_messages.TransactionHeader
	(*messages.DexTradeEvent)(nil),            // 10: solana_messages.DexTradeEvent
	(*messages.DexOrderEvent)(nil),            // 11: solana_messages.DexOrderEvent
	(*messages.PoolLiquidityChangeEvent)(nil), // 12: solana_messages.PoolLiquidityChangeEvent
	(*messages.CurrencyBalanceUpdate)(nil),    // 13: solana_messages.CurrencyBalanceUpdate
	(*messages.Transfer)(nil),                 // 14: solana_messages.Transfer
	(*messages.ParsedIdlTransaction)(nil),     // 15: solana_messages.ParsedIdlTransaction
}
var file_solana_corecast_stream_message_proto_depIdxs = []int32{
	8,  // 0: solana_corecast.TransactionAttributes.Status:type_name -> solana_messages.TransactionStatus
	9,  // 1: solana_corecast.TransactionAttributes.Header:type_name -> solana_messages.TransactionHeader
	1,  // 2: solana_corecast.DexTradeStreamMessage.Block:type_name -> solana_corecast.BlockAttributes
	0,  // 3: solana_corecast.DexTradeStreamMessage.Transaction:type_name -> solana_corecast.TransactionAttributes
	10, // 4: solana_corecast.DexTradeStreamMessage.Trade:type_name -> solana_messages.DexTradeEvent
	1,  // 5: solana_corecast.DexOrderStreamMessage.Block:type_name -> solana_corecast.BlockAttributes
	0,  // 6: solana_corecast.DexOrderStreamMessage.Transaction:type_name -> solana_corecast.TransactionAttributes
	11, // 7: solana_corecast.DexOrderStreamMessage.Order:type_name -> solana_messages.DexOrderEvent
	1,  // 8: solana_corecast.PoolLiquidityChangeStreamMessage.Block:type_name -> solana_corecast.BlockAttributes
	0,  // 9: solana_corecast.PoolLiquidityChangeStreamMessage.Transaction:type_name -> solana_corecast.TransactionAttributes
	12, // 10: solana_corecast.PoolLiquidityChangeStreamMessage.PoolEvent:type_name -> solana_messages.PoolLiquidityChangeEvent
	1,  // 11: solana_corecast.BalanceUpdateStreamMessage.Block:type_name -> solana_corecast.BlockAttributes
	0,  // 12: solana_corecast.BalanceUpdateStreamMessage.Transaction:type_name -> solana_corecast.TransactionAttributes
	13, // 13: solana_corecast.BalanceUpdateStreamMessage.BalanceUpdate:type_name -> solana_messages.CurrencyBalanceUpdate
	1,  // 14: solana_corecast.TransferStreamMessage.Block:type_name -> solana_corecast.BlockAttributes
	0,  // 15: solana_corecast.TransferStreamMessage.Transaction:type_name -> solana_corecast.TransactionAttributes
	14, // 16: solana_corecast.TransferStreamMessage.Transfer:type_name -> solana_messages.Transfer
	1,  // 17: solana_corecast.ParsedTransactionStreamMessage.Block:type_name -> solana_corecast.BlockAttributes
	15, // 18: solana_corecast.ParsedTransactionStreamMessage.Transaction:type_name -> solana_messages.ParsedIdlTransaction
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_solana_corecast_stream_message_proto_init() }
func file_solana_corecast_stream_message_proto_init() {
	if File_solana_corecast_stream_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_solana_corecast_stream_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_solana_corecast_stream_message_proto_goTypes,
		DependencyIndexes: file_solana_corecast_stream_message_proto_depIdxs,
		MessageInfos:      file_solana_corecast_stream_message_proto_msgTypes,
	}.Build()
	File_solana_corecast_stream_message_proto = out.File
	file_solana_corecast_stream_message_proto_rawDesc = nil
	file_solana_corecast_stream_message_proto_goTypes = nil
	file_solana_corecast_stream_message_proto_depIdxs = nil
}
