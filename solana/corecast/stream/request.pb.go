// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.3
// source: solana/corecast/request.proto

package solana_corecast

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Program *AddressFilter `protobuf:"bytes,1,opt,name=program,proto3" json:"program,omitempty"`
	Pool    *AddressFilter `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	Token   *AddressFilter `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Trader  *AddressFilter `protobuf:"bytes,4,opt,name=trader,proto3" json:"trader,omitempty"`
}

func (x *SubscribeTradesRequest) Reset() {
	*x = SubscribeTradesRequest{}
	mi := &file_solana_corecast_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTradesRequest) ProtoMessage() {}

func (x *SubscribeTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTradesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeTradesRequest) Descriptor() ([]byte, []int) {
	return file_solana_corecast_request_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeTradesRequest) GetProgram() *AddressFilter {
	if x != nil {
		return x.Program
	}
	return nil
}

func (x *SubscribeTradesRequest) GetPool() *AddressFilter {
	if x != nil {
		return x.Pool
	}
	return nil
}

func (x *SubscribeTradesRequest) GetToken() *AddressFilter {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *SubscribeTradesRequest) GetTrader() *AddressFilter {
	if x != nil {
		return x.Trader
	}
	return nil
}

type SubscribeOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Program *AddressFilter `protobuf:"bytes,1,opt,name=program,proto3" json:"program,omitempty"`
	Pool    *AddressFilter `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	Token   *AddressFilter `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Trader  *AddressFilter `protobuf:"bytes,4,opt,name=trader,proto3" json:"trader,omitempty"`
}

func (x *SubscribeOrdersRequest) Reset() {
	*x = SubscribeOrdersRequest{}
	mi := &file_solana_corecast_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeOrdersRequest) ProtoMessage() {}

func (x *SubscribeOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeOrdersRequest.ProtoReflect.Descriptor instead.
func (*SubscribeOrdersRequest) Descriptor() ([]byte, []int) {
	return file_solana_corecast_request_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeOrdersRequest) GetProgram() *AddressFilter {
	if x != nil {
		return x.Program
	}
	return nil
}

func (x *SubscribeOrdersRequest) GetPool() *AddressFilter {
	if x != nil {
		return x.Pool
	}
	return nil
}

func (x *SubscribeOrdersRequest) GetToken() *AddressFilter {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *SubscribeOrdersRequest) GetTrader() *AddressFilter {
	if x != nil {
		return x.Trader
	}
	return nil
}

type SubscribePoolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Program *AddressFilter `protobuf:"bytes,1,opt,name=program,proto3" json:"program,omitempty"`
	Pool    *AddressFilter `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	Token   *AddressFilter `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SubscribePoolsRequest) Reset() {
	*x = SubscribePoolsRequest{}
	mi := &file_solana_corecast_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribePoolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePoolsRequest) ProtoMessage() {}

func (x *SubscribePoolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePoolsRequest.ProtoReflect.Descriptor instead.
func (*SubscribePoolsRequest) Descriptor() ([]byte, []int) {
	return file_solana_corecast_request_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribePoolsRequest) GetProgram() *AddressFilter {
	if x != nil {
		return x.Program
	}
	return nil
}

func (x *SubscribePoolsRequest) GetPool() *AddressFilter {
	if x != nil {
		return x.Pool
	}
	return nil
}

func (x *SubscribePoolsRequest) GetToken() *AddressFilter {
	if x != nil {
		return x.Token
	}
	return nil
}

type SubscribeTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Program *AddressFilter `protobuf:"bytes,1,opt,name=program,proto3" json:"program,omitempty"`
	Signer  *AddressFilter `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *SubscribeTransactionsRequest) Reset() {
	*x = SubscribeTransactionsRequest{}
	mi := &file_solana_corecast_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTransactionsRequest) ProtoMessage() {}

func (x *SubscribeTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTransactionsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_solana_corecast_request_proto_rawDescGZIP(), []int{3}
}

func (x *SubscribeTransactionsRequest) GetProgram() *AddressFilter {
	if x != nil {
		return x.Program
	}
	return nil
}

func (x *SubscribeTransactionsRequest) GetSigner() *AddressFilter {
	if x != nil {
		return x.Signer
	}
	return nil
}

type SubscribeTransfersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   *AddressFilter `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver *AddressFilter `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Token    *AddressFilter `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SubscribeTransfersRequest) Reset() {
	*x = SubscribeTransfersRequest{}
	mi := &file_solana_corecast_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeTransfersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTransfersRequest) ProtoMessage() {}

func (x *SubscribeTransfersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTransfersRequest.ProtoReflect.Descriptor instead.
func (*SubscribeTransfersRequest) Descriptor() ([]byte, []int) {
	return file_solana_corecast_request_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeTransfersRequest) GetSender() *AddressFilter {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *SubscribeTransfersRequest) GetReceiver() *AddressFilter {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *SubscribeTransfersRequest) GetToken() *AddressFilter {
	if x != nil {
		return x.Token
	}
	return nil
}

type SubscribeBalanceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *AddressFilter `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Token   *AddressFilter `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SubscribeBalanceUpdateRequest) Reset() {
	*x = SubscribeBalanceUpdateRequest{}
	mi := &file_solana_corecast_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeBalanceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeBalanceUpdateRequest) ProtoMessage() {}

func (x *SubscribeBalanceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeBalanceUpdateRequest.ProtoReflect.Descriptor instead.
func (*SubscribeBalanceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_solana_corecast_request_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeBalanceUpdateRequest) GetAddress() *AddressFilter {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SubscribeBalanceUpdateRequest) GetToken() *AddressFilter {
	if x != nil {
		return x.Token
	}
	return nil
}

type AddressFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *AddressFilter) Reset() {
	*x = AddressFilter{}
	mi := &file_solana_corecast_request_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressFilter) ProtoMessage() {}

func (x *AddressFilter) ProtoReflect() protoreflect.Message {
	mi := &file_solana_corecast_request_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressFilter.ProtoReflect.Descriptor instead.
func (*AddressFilter) Descriptor() ([]byte, []int) {
	return file_solana_corecast_request_proto_rawDescGZIP(), []int{6}
}

func (x *AddressFilter) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

var File_solana_corecast_request_proto protoreflect.FileDescriptor

var file_solana_corecast_request_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x22, 0xf4, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73,
	0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x32, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x34, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e,
	0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x36, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x22, 0xf4, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x32, 0x0a, 0x04,
	0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c,
	0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c,
	0x12, 0x34, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x36, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x22, 0xbb,
	0x01, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61,
	0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x12, 0x32, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x34, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x90, 0x01, 0x0a,
	0x1c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22,
	0xc5, 0x01, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x34, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c,
	0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2d, 0x0a, 0x0d, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_solana_corecast_request_proto_rawDescOnce sync.Once
	file_solana_corecast_request_proto_rawDescData = file_solana_corecast_request_proto_rawDesc
)

func file_solana_corecast_request_proto_rawDescGZIP() []byte {
	file_solana_corecast_request_proto_rawDescOnce.Do(func() {
		file_solana_corecast_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_solana_corecast_request_proto_rawDescData)
	})
	return file_solana_corecast_request_proto_rawDescData
}

var file_solana_corecast_request_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_solana_corecast_request_proto_goTypes = []any{
	(*SubscribeTradesRequest)(nil),        // 0: solana_corecast.SubscribeTradesRequest
	(*SubscribeOrdersRequest)(nil),        // 1: solana_corecast.SubscribeOrdersRequest
	(*SubscribePoolsRequest)(nil),         // 2: solana_corecast.SubscribePoolsRequest
	(*SubscribeTransactionsRequest)(nil),  // 3: solana_corecast.SubscribeTransactionsRequest
	(*SubscribeTransfersRequest)(nil),     // 4: solana_corecast.SubscribeTransfersRequest
	(*SubscribeBalanceUpdateRequest)(nil), // 5: solana_corecast.SubscribeBalanceUpdateRequest
	(*AddressFilter)(nil),                 // 6: solana_corecast.AddressFilter
}
var file_solana_corecast_request_proto_depIdxs = []int32{
	6,  // 0: solana_corecast.SubscribeTradesRequest.program:type_name -> solana_corecast.AddressFilter
	6,  // 1: solana_corecast.SubscribeTradesRequest.pool:type_name -> solana_corecast.AddressFilter
	6,  // 2: solana_corecast.SubscribeTradesRequest.token:type_name -> solana_corecast.AddressFilter
	6,  // 3: solana_corecast.SubscribeTradesRequest.trader:type_name -> solana_corecast.AddressFilter
	6,  // 4: solana_corecast.SubscribeOrdersRequest.program:type_name -> solana_corecast.AddressFilter
	6,  // 5: solana_corecast.SubscribeOrdersRequest.pool:type_name -> solana_corecast.AddressFilter
	6,  // 6: solana_corecast.SubscribeOrdersRequest.token:type_name -> solana_corecast.AddressFilter
	6,  // 7: solana_corecast.SubscribeOrdersRequest.trader:type_name -> solana_corecast.AddressFilter
	6,  // 8: solana_corecast.SubscribePoolsRequest.program:type_name -> solana_corecast.AddressFilter
	6,  // 9: solana_corecast.SubscribePoolsRequest.pool:type_name -> solana_corecast.AddressFilter
	6,  // 10: solana_corecast.SubscribePoolsRequest.token:type_name -> solana_corecast.AddressFilter
	6,  // 11: solana_corecast.SubscribeTransactionsRequest.program:type_name -> solana_corecast.AddressFilter
	6,  // 12: solana_corecast.SubscribeTransactionsRequest.signer:type_name -> solana_corecast.AddressFilter
	6,  // 13: solana_corecast.SubscribeTransfersRequest.sender:type_name -> solana_corecast.AddressFilter
	6,  // 14: solana_corecast.SubscribeTransfersRequest.receiver:type_name -> solana_corecast.AddressFilter
	6,  // 15: solana_corecast.SubscribeTransfersRequest.token:type_name -> solana_corecast.AddressFilter
	6,  // 16: solana_corecast.SubscribeBalanceUpdateRequest.address:type_name -> solana_corecast.AddressFilter
	6,  // 17: solana_corecast.SubscribeBalanceUpdateRequest.token:type_name -> solana_corecast.AddressFilter
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_solana_corecast_request_proto_init() }
func file_solana_corecast_request_proto_init() {
	if File_solana_corecast_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_solana_corecast_request_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_solana_corecast_request_proto_goTypes,
		DependencyIndexes: file_solana_corecast_request_proto_depIdxs,
		MessageInfos:      file_solana_corecast_request_proto_msgTypes,
	}.Build()
	File_solana_corecast_request_proto = out.File
	file_solana_corecast_request_proto_rawDesc = nil
	file_solana_corecast_request_proto_goTypes = nil
	file_solana_corecast_request_proto_depIdxs = nil
}
